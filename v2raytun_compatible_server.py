#!/usr/bin/env python3
"""
API —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .sub —Ñ–∞–π–ª–æ–≤ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö —Å V2RayTun
–ü—Ä–∏–Ω–∏–º–∞–µ—Ç vless:// –∫–ª—é—á–∏ –∏ –æ—Ç–¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–µ HTTPS —Å—Å—ã–ª–∫–∏ –Ω–∞ .sub —Ñ–∞–π–ª—ã
"""

from flask import Flask, request, Response, jsonify
import os
import logging
import uuid
import base64
import tempfile
from datetime import datetime
from urllib.parse import quote

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è .sub —Ñ–∞–π–ª–æ–≤
SUB_FILES_DIR = os.path.join(tempfile.gettempdir(), 'v2raytun_subs')
if not os.path.exists(SUB_FILES_DIR):
    os.makedirs(SUB_FILES_DIR)

logger = logging.getLogger(__name__)

@app.route('/health')
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API"""
    return jsonify({
        "status": "ok", 
        "message": "V2RayTun Compatible Server is running",
        "timestamp": datetime.now().isoformat()
    })

@app.route('/upload', methods=['POST'])
def upload_config():
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç VLESS –∫–ª—é—á –∏ —Å–æ–∑–¥–∞–µ—Ç .sub —Ñ–∞–π–ª –¥–ª—è V2RayTun
    
    POST /upload
    Content-Type: application/json
    {
        "config": "vless://...",
        "profile_name": "VPN"
    }
    """
    try:
        data = request.get_json()
        
        if not data:
            return jsonify({"success": False, "error": "JSON data required"}), 400
        
        vless_config = data.get('config')
        profile_name = data.get('profile_name', 'VPN')
        
        if not vless_config:
            return jsonify({"success": False, "error": "config field is required"}), 400
        
        if not vless_config.startswith('vless://'):
            return jsonify({"success": False, "error": "Only vless:// configs are supported"}), 400
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è .sub —Ñ–∞–π–ª–∞
        sub_id = str(uuid.uuid4())[:12]
        
        # –°–æ–∑–¥–∞–µ–º .sub —Ñ–∞–π–ª –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è subscription)
        sub_content = create_subscription_content(vless_config, profile_name)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º .sub —Ñ–∞–π–ª
        sub_filename = f"{sub_id}.sub"
        sub_filepath = os.path.join(SUB_FILES_DIR, sub_filename)
        
        with open(sub_filepath, 'w', encoding='utf-8') as f:
            f.write(sub_content)
        
        # –°–æ–∑–¥–∞–µ–º –ø—É–±–ª–∏—á–Ω–æ-–¥–æ—Å—Ç—É–ø–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ .sub —Ñ–∞–π–ª, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        # –ü—Ä–∏–º–µ—Ä: http://192.168.1.133:5005/sub/<id>
        host_url = request.host_url.rstrip('/')
        sub_url = f"{host_url}/sub/{sub_id}"
        
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω .sub —Ñ–∞–π–ª {sub_id} –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è '{profile_name}'")
        
        return jsonify({
            "success": True,
            "sub_id": sub_id,
            "sub_url": sub_url,
            "profile_name": profile_name,
            "file_path": sub_filepath,
            "created_at": datetime.now().isoformat()
        })
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .sub —Ñ–∞–π–ª–∞: {e}")
        return jsonify({"success": False, "error": str(e)}), 500

@app.route('/sub/<sub_id>')
def get_subscription(sub_id):
    """
    –û—Ç–¥–∞–µ—Ç .sub —Ñ–∞–π–ª –ø–æ HTTPS
    
    GET /sub/{sub_id}
    Returns: base64 encoded subscription content
    """
    try:
        sub_filepath = os.path.join(SUB_FILES_DIR, f"{sub_id}.sub")
        
        if not os.path.exists(sub_filepath):
            logger.warning(f"‚ö†Ô∏è .sub —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {sub_id}")
            return "Subscription not found", 404
        
        with open(sub_filepath, 'r', encoding='utf-8') as f:
            sub_content = f.read()
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º .sub —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        response = Response(
            sub_content,
            mimetype='text/plain',
            headers={
                'Content-Type': 'text/plain; charset=utf-8',
                'Access-Control-Allow-Origin': '*',
                'Cache-Control': 'no-cache',
                'Content-Disposition': f'attachment; filename="{sub_id}.sub"',
                'subscription-userinfo': f'upload=0; download=0; total=0; expire=0'
            }
        )
        
        logger.info(f"üì§ –û—Ç–¥–∞–Ω .sub —Ñ–∞–π–ª {sub_id}")
        return response
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è .sub —Ñ–∞–π–ª–∞ {sub_id}: {e}")
        return f"Error: {str(e)}", 500

@app.route('/sub/<sub_id>/raw')
def get_subscription_raw(sub_id):
    """
    –û—Ç–¥–∞–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π .sub —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    
    GET /sub/{sub_id}/raw
    Returns: decoded subscription content
    """
    try:
        sub_filepath = os.path.join(SUB_FILES_DIR, f"{sub_id}.sub")
        
        if not os.path.exists(sub_filepath):
            return "Subscription not found", 404
        
        with open(sub_filepath, 'r', encoding='utf-8') as f:
            encoded_content = f.read()
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
        try:
            decoded_content = base64.b64decode(encoded_content).decode('utf-8')
        except:
            decoded_content = encoded_content  # –ï—Å–ª–∏ –Ω–µ base64, –æ—Ç–¥–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        
        return Response(
            decoded_content,
            mimetype='text/plain',
            headers={'Content-Type': 'text/plain; charset=utf-8'}
        )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è raw .sub —Ñ–∞–π–ª–∞ {sub_id}: {e}")
        return f"Error: {str(e)}", 500


@app.route('/open/<sub_id>')
def open_page(sub_id: str):
    """–ü—Ä–æ—Å—Ç–∞—è HTML‚Äë—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–ø—É—Å–∫–∞ V2RayTun.
    1) import-config?url=<HTTPS sub>
    2) add?config=<RAW VLESS –∏–∑ /raw>
    """
    try:
        sub_url = f"{request.host_url.rstrip('/')}/sub/{sub_id}"
        raw_url = f"{sub_url}/raw"

        # v2raytun deep links
        v2raytun_import = f"v2raytun://import-config?url={quote(sub_url, safe='')}"

        # –ü–æ–ª—É—á–∞–µ–º raw vless, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± (add?config=)
        raw_resp = app.test_client().get(f"/sub/{sub_id}/raw")
        vless_raw = raw_resp.get_data(as_text=True) if raw_resp.status_code == 200 else ''
        v2raytun_add = (
            f"v2raytun://add?config={quote(vless_raw, safe='')}" if vless_raw.startswith('vless://') else ''
        )

        html = f"""
<!doctype html>
<html lang='ru'>
<meta charset='utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1'/>
<title>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN</title>
<body style="font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;max-width:600px;margin:40px auto;padding:0 16px;">
  <h2>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN</h2>
  <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ V2RayTun.</p>
  <p><a href="{v2raytun_import}" style="display:inline-block;padding:12px 18px;background:#1e88e5;color:#fff;text-decoration:none;border-radius:8px;">–û—Ç–∫—Ä—ã—Ç—å –≤ V2RayTun</a></p>
  <details style="margin-top:12px;">
    <summary>–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã</summary>
    <div style="margin-top:8px;">
      {'<p><a href="'+v2raytun_add+'">–û—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ add?config=</a></p>' if v2raytun_add else ''}
      <p><a href="https://deeplink.website/?url={quote(v2raytun_import, safe='')}">–ß–µ—Ä–µ–∑ deeplink.website</a></p>
      <p><a href="{sub_url}">–°–∫–∞—á–∞—Ç—å .sub</a> ¬∑ <a href="{raw_url}">–ü–æ–∫–∞–∑–∞—Ç—å vless</a></p>
    </div>
  </details>
</body>
</html>
"""
        return Response(html, mimetype='text/html; charset=utf-8')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ open_page: {e}")
        return "Internal error", 500

@app.route('/list')
def list_subscriptions():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö .sub —Ñ–∞–π–ª–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)"""
    try:
        subs = []
        for filename in os.listdir(SUB_FILES_DIR):
            if filename.endswith('.sub'):
                sub_id = filename[:-4]  # —É–±–∏—Ä–∞–µ–º .sub
                sub_filepath = os.path.join(SUB_FILES_DIR, filename)
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                stat = os.stat(sub_filepath)
                created_time = datetime.fromtimestamp(stat.st_ctime).isoformat()
                
                subs.append({
                    "sub_id": sub_id,
                    "url": f"http://localhost:5004/sub/{sub_id}",
                    "raw_url": f"http://localhost:5004/sub/{sub_id}/raw",
                    "created_at": created_time,
                    "size_bytes": stat.st_size
                })
        
        return jsonify({
            "subscriptions": subs, 
            "total": len(subs),
            "directory": SUB_FILES_DIR
        })
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ .sub —Ñ–∞–π–ª–æ–≤: {e}")
        return jsonify({"error": str(e)}), 500

def create_subscription_content(vless_config: str, profile_name: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .sub —Ñ–∞–π–ª–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è V2RayTun
    
    Args:
        vless_config (str): VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        profile_name (str): –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è
        
    Returns:
        str: base64 –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .sub —Ñ–∞–π–ª–∞
    """
    try:
        # V2RayTun –æ–∂–∏–¥–∞–µ—Ç base64 –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
        # –ö–∞–∂–¥–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –∫–æ–Ω–µ—Ü VLESS –∫–ª—é—á–∞ –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
        if '#' not in vless_config:
            vless_with_name = f"{vless_config}#{profile_name}"
        else:
            vless_with_name = vless_config
        
        # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è subscription —Ñ–∞–π–ª–æ–≤)
        content_bytes = vless_with_name.encode('utf-8')
        base64_content = base64.b64encode(content_bytes).decode('utf-8')
        
        logger.info(f"üìù –°–æ–∑–¥–∞–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .sub –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è '{profile_name}'")
        return base64_content
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .sub: {e}")
        # Fallback - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª—é—á
        return base64.b64encode(vless_config.encode('utf-8')).decode('utf-8')

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
@app.route('/test')
def test_endpoint():
    """–¢–µ—Å—Ç–æ–≤—ã–π endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API"""
    test_vless = "vless://12345678-90ab-cdef-1234-567890abcdef@vpn.example.com:443?security=tls&sni=vpn.example.com&type=ws&host=vpn.example.com&path=%2F#TestVPN"
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ .sub —Ñ–∞–π–ª–∞
    try:
        import requests
        response = requests.post(
            "http://localhost:5004/upload",
            json={"config": test_vless, "profile_name": "Test Profile"}
        )
        return jsonify({
            "test_request": True,
            "api_response": response.json() if response.status_code == 200 else response.text,
            "status_code": response.status_code
        })
    except Exception as e:
        return jsonify({"test_request": True, "error": str(e)})

if __name__ == '__main__':
    import os
    port = int(os.environ.get('PORT', 5004))
    print("üöÄ –ó–∞–ø—É—Å–∫ V2RayTun Compatible Server...")
    print("üìÇ .sub —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤:", SUB_FILES_DIR)
    print(f"üîß –ó–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞: http://localhost:{port}/health")
    print(f"üìã –°–ø–∏—Å–æ–∫ .sub —Ñ–∞–π–ª–æ–≤: http://localhost:{port}/list")
    print(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π endpoint: http://localhost:{port}/test")
    print(f"üì° API endpoint: POST http://localhost:{port}/upload")
    print("--" * 30)
    
    app.run(host='0.0.0.0', port=port, debug=False)
